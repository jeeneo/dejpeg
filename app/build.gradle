plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.je.dejpeg'
    compileSdk 35

    defaultConfig {
        applicationId "com.je.dejpeg"
        minSdk 24
        targetSdk 35
        versionCode 251
        versionName "2.5.1-debug"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.5.3'
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    packagingOptions {
        pickFirst '**/*.so'
    }
    
    splits {
        abi {
            enable true
            reset()
            if (project.hasProperty('targetAbi')) {
                include project.targetAbi
            } else {
                include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            }
            universalApk false
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def baseAbiName = output.filters.find { it.filterType == com.android.build.OutputFile.ABI }.identifier
            output.outputFileName = "dejpeg-${variant.name}-${baseAbiName}.apk"
        }
    }
    // sourceSets {
    //     main {
    //         assets.srcDirs += 'src/main/assets'
    //     }
    //     release {
    //         assets.srcDirs += "$buildDir/generated/source_code_assets"
    //     }
    // }
}

// task copySrcMainToAssets(type: Copy) {
//     from "$rootDir/app/src/main"
//     into "$buildDir/generated/source_code_assets/source_code/src/main"
// }

// android.applicationVariants.all { variant ->
//     if (variant.buildType.name == "release") {
//         variant.mergeAssetsProvider.configure {
//             dependsOn(copySrcMainToAssets)
//         }
//         def lintAnalyzeTaskName = "lintVitalAnalyze${variant.name.capitalize()}"
//         def lintAnalyzeTask = tasks.findByName(lintAnalyzeTaskName)
//         if (lintAnalyzeTask != null) {
//             lintAnalyzeTask.dependsOn(copySrcMainToAssets)
//         }
//         def lintReportTaskName = "generate${variant.name.capitalize()}LintVitalReportModel"
//         def lintReportTask = tasks.findByName(lintReportTaskName)
//         if (lintReportTask != null) {
//             lintReportTask.dependsOn(copySrcMainToAssets)
//         }
//     }
// }

dependencies {
    implementation platform('androidx.compose:compose-bom:2025.05.00')
    implementation 'androidx.compose.material3:material3:1.3.2'
    implementation 'com.github.SmartToolFactory:Compose-BeforeAfter:1.2.3'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'com.microsoft.onnxruntime:onnxruntime-android:latest.release'
    implementation 'androidx.recyclerview:recyclerview:1.4.0'
    implementation 'androidx.core:core-ktx:1.16.0'
    implementation 'androidx.core:core:1.16.0'
    implementation 'io.noties.markwon:core:4.6.2'
}