<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="theme.dejpeg" parent="Theme.Material3.DayNight.NoActionBar">
        <!-- Status bar color - M3 themes handle this, but can be overridden. -->
        <!-- <item name="android:statusBarColor">?attr/colorSurface</item> -->
        <!-- Forcing black for now, can be refined -->
        <item name="android:statusBarColor">@android:color/black</item>
        <item name="android:windowLightStatusBar" tools:targetApi="m">?attr/isLightTheme</item>

        <!-- Material 3 attributes will be primarily used.
             Explicit colorPrimary, colorSecondary, etc. are removed to allow
             dynamic coloring and standard M3 theming to take effect.
             If specific branding colors are needed, they can be added here,
             but it's often better to customize via M3 theme builder or overrides.
        -->
        <!-- Example of overriding a specific M3 color if needed:
        <item name="colorPrimary">@color/my_brand_primary</item>
        -->

        <!-- Ensure component styles use M3 defaults or are M3 compatible -->
        <item name="materialButtonStyle">@style/Widget.App.Button</item>
        <!-- The actionBarStyle is not strictly needed with NoActionBar,
             but if a Toolbar is styled via theme attributes, this could be relevant.
             For now, Toolbar theming is typically done via app:theme on the Toolbar itself
             or by ensuring the activity theme correctly styles it.
        -->
        <!-- <item name="actionBarStyle">@style/Widget.App.ActionBar</item> -->
    </style>

    <!-- Custom Button style, ensuring it inherits from M3 and doesn't force colors
         that would break dynamic theming. -->
    <style name="Widget.App.Button" parent="Widget.Material3.Button">
        <!-- Remove hardcoded text colors or background tints if they interfere
             with Material 3's dynamic coloring or default styling.
             Example:
        <item name="android:textColor">?attr/colorOnPrimary</item>
        <item name="backgroundTint">?attr/colorPrimary</item>
        -->
        <item name="android:stateListAnimator">@null</item> <!-- Kept this custom attribute -->
    </style>

    <!-- This theme seems for a specific Compose Dialog, ensure it's M3 compatible.
         Theme.MaterialComponents.DayNight.Dialog is an M2 theme.
         If this is for a full-screen Compose dialog, it might be okay,
         but for standard M3 dialogs, use M3 themes/components.
         For now, leaving as is, assuming it's a specific case.
    -->
    <style name="Theme.ComposeDialog" parent="Theme.MaterialComponents.DayNight.Dialog">
        <item name="android:windowIsFloating">false</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowFullscreen">true</item>
        <item name="android:windowNoTitle">true</item>
    </style>

    <!-- Custom ActionBar style. With NoActionBar theme, this is less critical
         unless used explicitly with a Toolbar's android:theme attribute.
         M3 toolbars are typically styled by colorSurface.
    -->
    <style name="Widget.App.ActionBar" parent="Widget.Material3.ActionBar.Solid">
        <!-- Removing hardcoded background to allow M3 theme to control surface colors
        <item name="background">@color/background_dark</item>
        -->
        <item name="elevation">0dp</item> <!-- Kept this custom attribute -->
    </style>
</resources>